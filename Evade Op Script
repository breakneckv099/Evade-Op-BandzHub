local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/modern"))()
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer

-- Auto reload support
if getgenv().AutoReloadScript then
    loadstring(game:HttpGet(getgenv().AutoReloadScript))()
    return
end

-- UI Tabs
local autoTab = Lib:Tab("Auto")
local visualTab = Lib:Tab("Visual")
local miscTab = Lib:Tab("Misc")

-- Utility: Create Platform
local function createSkyPlatform()
    local platform = Instance.new("Part")
    platform.Size = Vector3.new(100, 1, 100)
    platform.Anchored = true
    platform.CanCollide = true
    platform.Position = Vector3.new(0, 400, 0)
    platform.Name = "SafePlatform"
    platform.Parent = Workspace
    return platform
end

-- FullBright
local lighting = game:GetService("Lighting")
local originalBrightness = lighting.Brightness
local originalAmbient = lighting.Ambient

miscTab:Toggle("FullBright", function(state)
    if state then
        lighting.Brightness = 5
        lighting.Ambient = Color3.new(1, 1, 1)
    else
        lighting.Brightness = originalBrightness
        lighting.Ambient = originalAmbient
    end
end)

-- FPS Boost
miscTab:Toggle("FPS Boost", function(state)
    for _, obj in ipairs(lighting:GetChildren()) do
        if obj:IsA("BlurEffect") or obj:IsA("SunRaysEffect") or obj:IsA("ColorCorrectionEffect") then
            obj.Enabled = not state
        end
    end
end)

-- Anti-AFK
miscTab:Toggle("Anti-AFK", function(state)
    if state then
        task.spawn(function()
            while wait(30) and state do
                for _, key in ipairs({"W", "A", "S", "D"}) do
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, key, false, game)
                    wait(0.1)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, key, false, game)
                end
                game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 0)
                wait(0.05)
                game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 0)
            end
        end)
    end
end)

-- Server Hop Button
miscTab:Button("Server Hop", function()
    getgenv().AutoReloadScript = "https://raw.githubusercontent.com/breakneckv099/Evade-Op-BandzHub/refs/heads/main/Evade%20Op%20Script"
    local function getServer()
        local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url)).data
        end)
        if success then
            for _, server in ipairs(result) do
                if server.playing < server.maxPlayers and server.id ~= game.JobId then
                    return server.id
                end
            end
        end
        return nil
    end

    local serverId = getServer()
    if serverId then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, serverId, LocalPlayer)
    else
        warn("No suitable server found.")
    end
end)

-- Auto Escape
local autoEscape = false
local escapePlatform
local escapeCooldown = false
local originalCFrame = nil

autoTab:Toggle("Auto Escape", function(state)
    autoEscape = state
end)

task.spawn(function()
    while true do
        wait(10)
        if autoEscape then
            if not escapePlatform or not escapePlatform.Parent then
                escapePlatform = createSkyPlatform()
            end
        end
    end
end)

task.spawn(function()
    while task.wait(0.25) do
        if autoEscape and not escapeCooldown and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local char = LocalPlayer.Character
            for _, entity in ipairs(Workspace.Game.Players:GetChildren()) do
                if entity:FindFirstChild("HumanoidRootPart") then
                    local isNextbot = ReplicatedStorage.NPCs:FindFirstChild(entity.Name)
                    if isNextbot then
                        local dist = (entity.HumanoidRootPart.Position - char.HumanoidRootPart.Position).Magnitude
                        if dist < 15 then
                            escapeCooldown = true
                            originalCFrame = char:GetPivot()
                            char:PivotTo(CFrame.new(escapePlatform.Position + Vector3.new(0, 5, 0)))
                            task.wait(6)
                            char:PivotTo(originalCFrame)
                            escapeCooldown = false
                            break
                        end
                    end
                end
            end
        end
    end
end)

-- Box ESP
local playerBoxESP = false
local nextbotBoxESP = false
local playerESPBoxes = {}
local nextbotESPBoxes = {}

local function clearBoxes(boxTable)
    for _, adornment in pairs(boxTable) do
        if adornment and adornment.Parent then
            adornment:Destroy()
        end
    end
    table.clear(boxTable)
end

local function createBox(target, size, color)
    local box = Instance.new("BoxHandleAdornment")
    box.Size = size
    box.Adornee = target
    box.AlwaysOnTop = true
    box.ZIndex = 1
    box.Transparency = 0.4
    box.Color3 = color
    box.Name = "ESP_Box"
    box.Parent = target
    return box
end

visualTab:Toggle("Player Box ESP", function(state)
    playerBoxESP = state
    if not state then
        clearBoxes(playerESPBoxes)
    end
end)

visualTab:Toggle("Nextbot Box ESP", function(state)
    nextbotBoxESP = state
    if not state then
        clearBoxes(nextbotESPBoxes)
    end
end)

task.spawn(function()
    while task.wait(0.5) do
        -- Player ESP Refresh
        if playerBoxESP then
            for _, plr in pairs(Players:GetPlayers()) do
                if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                    if not playerESPBoxes[plr] then
                        local box = createBox(plr.Character.HumanoidRootPart, Vector3.new(4, 6, 2), Color3.fromRGB(0, 200, 255))
                        playerESPBoxes[plr] = box
                    end
                end
            end
        end

        -- Nextbot ESP Refresh
        if nextbotBoxESP then
            for _, entity in ipairs(Workspace.Game.Players:GetChildren()) do
                if entity:FindFirstChild("HumanoidRootPart") then
                    local isNextbot = ReplicatedStorage.NPCs:FindFirstChild(entity.Name)
                    if isNextbot and not nextbotESPBoxes[entity] then
                        local box = createBox(entity.HumanoidRootPart, Vector3.new(6, 6, 3), Color3.fromRGB(255, 0, 0))
                        nextbotESPBoxes[entity] = box
                    end
                end
            end
        end
    end
end)
