local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/modern"))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local TeleportService = game:GetService("TeleportService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Tabs
local autoTab = Lib:Tab("Auto")
local visualTab = Lib:Tab("Visuals")
local miscTab = Lib:Tab("Misc")
local playerTab = Lib:Tab("Player")

-- === AUTO ESCAPE ===
local autoEscape = false
local escapePlatform = nil
local escaped = false
local originalCFrame = nil
local lastEscapeTime = 0

local function createSkyPlatform()
	local part = Instance.new("Part")
	part.Size = Vector3.new(100, 1, 100)
	part.Anchored = true
	part.Position = Vector3.new(0, 400, 0)
	part.CanCollide = true
	part.Name = "SafePlatform"
	part.Parent = Workspace
	return part
end

autoTab:Toggle("Auto Escape", function(state)
	autoEscape = state
	if state then
		if not escapePlatform or not escapePlatform:IsDescendantOf(Workspace) then
			escapePlatform = createSkyPlatform()
		end

		task.spawn(function()
			while autoEscape do
				-- Refresh platform every 10s
				if not escapePlatform or not escapePlatform:IsDescendantOf(Workspace) then
					escapePlatform = createSkyPlatform()
				end

				for _, ent in ipairs(Workspace.Game.Players:GetChildren()) do
					local isNextbot = ReplicatedStorage.NPCs:FindFirstChild(ent.Name)
					local botHRP = ent:FindFirstChild("HumanoidRootPart")
					local playerHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

					if isNextbot and botHRP and playerHRP then
						local dist = (botHRP.Position - playerHRP.Position).Magnitude

						if dist < 21.5 and not escaped then
							originalCFrame = LocalPlayer.Character:GetPivot()
							LocalPlayer.Character:PivotTo(CFrame.new(escapePlatform.Position + Vector3.new(0, 5, 0)))
							lastEscapeTime = tick()
							escaped = true
						elseif dist > 35 and escaped and tick() - lastEscapeTime > 5 then
							LocalPlayer.Character:PivotTo(originalCFrame)
							escaped = false
						end
					end
				end

				task.wait(0.3)
			end
		end)
	end
end)

-- === ESP: HIGHLIGHT FOR PLAYERS ===
local playerESPEnabled = false
local playerHighlights = {}

local function applyHighlight(char)
	if not char:FindFirstChild("ESP_Highlight") then
		local hl = Instance.new("Highlight")
		hl.Name = "ESP_Highlight"
		hl.FillColor = Color3.fromRGB(0, 200, 255)
		hl.OutlineColor = Color3.new(1, 1, 1)
		hl.FillTransparency = 0.2
		hl.OutlineTransparency = 0
		hl.Adornee = char
		hl.Parent = char
	end
end

visualTab:Toggle("Player ESP (Chams)", function(state)
	playerESPEnabled = state
end)

-- Constant refresh every 13s
task.spawn(function()
	while true do
		if playerESPEnabled then
			for _, plr in pairs(Players:GetPlayers()) do
				if plr ~= LocalPlayer and plr.Character then
					local char = plr.Character
					local reviveFolder = Workspace.Game.Players:FindFirstChild(plr.Name)
					if reviveFolder then
						if reviveFolder:FindFirstChild("Revives") or char:FindFirstChild("Revives") then
							-- downed
						end
					end
					applyHighlight(char)
				end
			end
		end
		task.wait(13)
	end
end)

-- === ESP: NEXTBOT BOXES ===
local nextbotESPEnabled = false

local function addNextbotBox(part)
	if part:FindFirstChild("Nextbot_Box") then return end
	local box = Instance.new("BoxHandleAdornment")
	box.Name = "Nextbot_Box"
	box.Adornee = part
	box.Size = part.Size + Vector3.new(2, 2, 2)
	box.Color3 = Color3.fromRGB(255, 0, 0)
	box.AlwaysOnTop = true
	box.Transparency = 0.5
	box.ZIndex = 1
	box.Parent = part
end

visualTab:Toggle("Nextbot Box ESP", function(state)
	nextbotESPEnabled = state
end)

-- ESP for nextbots with 1500 stud range
task.spawn(function()
	while true do
		if nextbotESPEnabled then
			for _, bot in pairs(Workspace.Game.Players:GetChildren()) do
				local isBot = ReplicatedStorage.NPCs:FindFirstChild(bot.Name)
				local hrp = bot:FindFirstChild("HumanoidRootPart")
				if isBot and hrp and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local dist = (hrp.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
					if dist < 1500 then
						addNextbotBox(hrp)
					end
				end
			end
		end
		task.wait(1)
	end
end)

-- === FULLBRIGHT ===
local fullBright = false

miscTab:Toggle("Fullbright", function(state)
	fullBright = state
	if state then
		task.spawn(function()
			while fullBright do
				Lighting.Brightness = 2
				Lighting.ClockTime = 12
				Lighting.FogEnd = 100000
				Lighting.GlobalShadows = false
				task.wait(2)
			end
		end)
	end
end)

-- === FPS BOOST ===
miscTab:Button("FPS Boost", function()
	for _, obj in pairs(game:GetDescendants()) do
		if obj:IsA("Texture") or obj:IsA("Decal") then
			obj.Transparency = 1
		elseif obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
			obj.Enabled = false
		end
	end
end)

-- === ANTI-AFK ===
local antiAFK = false

miscTab:Toggle("Anti-AFK", function(state)
	antiAFK = state
	if state then
		task.spawn(function()
			while antiAFK do
				for _, key in ipairs({"W", "A", "S", "D"}) do
					VirtualInputManager:SendKeyEvent(true, key, false, game)
					wait(0.1)
					VirtualInputManager:SendKeyEvent(false, key, false, game)
				end
				mouse1click()
				mouse2click()
				wait(30)
			end
		end)
	end
end)

-- === INFINITE JUMP ===
playerTab:Toggle("Infinite Jump", function(state)
	UserInputService.JumpRequest:Connect(function()
		if state and LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
			LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
		end
	end)
end)

-- === SERVER HOP ===
miscTab:Button("Server Hop", function()
	local HttpService = game:GetService("HttpService")
	local function getServer()
		local servers = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100")).data
		for _, server in ipairs(servers) do
			if server.playing < server.maxPlayers and server.id ~= game.JobId then
				return server.id
			end
		end
	end
	local sid = getServer()
	if sid then
		TeleportService:TeleportToPlaceInstance(game.PlaceId, sid, LocalPlayer)
	end
end)
